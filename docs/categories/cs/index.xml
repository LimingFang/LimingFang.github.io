<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Cs on Leo</title>
    <link>https://limingfang.github.io/categories/cs/</link>
    <description>Recent content in Cs on Leo</description>
    <generator>Hugo -- 0.147.3</generator>
    <language>en-us</language>
    <atom:link href="https://limingfang.github.io/categories/cs/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>IEEE754 学习</title>
      <link>https://limingfang.github.io/posts/fp32/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://limingfang.github.io/posts/fp32/</guid>
      <description>&lt;h2 id=&#34;todo&#34;&gt;TODO&lt;/h2&gt;
&lt;p&gt;排版用 latex 调整下。&lt;/p&gt;
&lt;h2 id=&#34;intro&#34;&gt;Intro&lt;/h2&gt;
&lt;p&gt;写这篇 blog 目的是了解一下浮点数规范，并尝试分析一些设计背后的原因（简单的）。主要参考了 IEEE754-1985。&lt;/p&gt;
&lt;h2 id=&#34;basic&#34;&gt;basic&lt;/h2&gt;
&lt;p&gt;浮点数包括 16-bit(half precision)、32-bit(single precision)、64-bit(double precision)、128-bit(quadruple precision)，其表示范围和精度不同，但是格式是一致的。
首先参考十进制科学计数法：
number = base&lt;!-- raw HTML omitted --&gt;10&lt;!-- raw HTML omitted --&gt; * 10&lt;!-- raw HTML omitted --&gt;exp&lt;!-- raw HTML omitted --&gt;, 1&amp;lt;=base&amp;lt;10&lt;/p&gt;
&lt;p&gt;IEEE754 规范采用了类似的思路，只不过 base, exp 这些都使用二进制表示。举个例子：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1.25 = 1.25 * 2^0 = 1.01_2 * 2^0&lt;/li&gt;
&lt;li&gt;0.625 = 1.25 * 2&lt;!-- raw HTML omitted --&gt;-1&lt;!-- raw HTML omitted --&gt; = 1.01_2 * 2&lt;!-- raw HTML omitted --&gt;-1&lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;上面这种是 normalized numbers，即 base 是 1.x 的形式，IEEE754 还规定了 denormalized numbers，目的是表示 (-1,1) 区间内非常非常小的数字。后边章节介绍存储时如何区分这两种类型（当然还有一些其他特殊的 number，但都是个例，后边一并介绍）。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
