<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Leo&#39;s Blog</title>
        <link>http://example.org/</link>
        <description>Leo&#39;s Blog</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Tue, 12 Jul 2022 00:00:00 &#43;0800</lastBuildDate>
            <atom:link href="http://example.org/index.xml" rel="self" type="application/rss+xml" />
        <item>
    <title>compaction 时机分析</title>
    <link>http://example.org/posts/compaction-time/</link>
    <pubDate>Tue, 12 Jul 2022 00:00:00 &#43;0800</pubDate><author>
                    <name>方里明</name><uri>https://limingfang.github.io</uri><email>limingfang97@outlook.com</email></author><guid>http://example.org/posts/compaction-time/</guid>
    <description><![CDATA[引言用户不断向 leveldb 写数据，这可能暂存在 memtable 或者 sst files，后者是最终存的地方。从 memtable dump 到第一层 sst 称为 minor compaction，不同 sst level 之间的整理称]]></description>
</item><item>
    <title>Debug in dap-mode for c&#43;&#43; and rust</title>
    <link>http://example.org/posts/dap-debug/</link>
    <pubDate>Sat, 04 Jun 2022 12:08:18 &#43;0800</pubDate><author>
                    <name>方里明</name><uri>https://limingfang.github.io</uri><email>limingfang97@outlook.com</email></author><guid>http://example.org/posts/dap-debug/</guid>
    <description><![CDATA[引言本文介绍在 emacs 中如何 debug c++、rust，以及 emacs 中 debug 系统的一些概念。 背景介绍在 editors/IDE 中为不同语言适配不同 debugger 非常麻烦，因为没有统一的 API，任意一]]></description>
</item><item>
    <title>rCore学习——1、应用程序与基本执行环境</title>
    <link>http://example.org/posts/%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E4%B8%8E%E5%9F%BA%E6%9C%AC%E6%89%A7%E8%A1%8C%E7%8E%AF%E5%A2%83/</link>
    <pubDate>Tue, 08 Mar 2022 21:08:18 &#43;0800</pubDate><author>
                    <name>方里明</name><uri>https://limingfang.github.io</uri><email>limingfang97@outlook.com</email></author><guid>http://example.org/posts/%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E4%B8%8E%E5%9F%BA%E6%9C%AC%E6%89%A7%E8%A1%8C%E7%8E%AF%E5%A2%83/</guid>
    <description><![CDATA[引言​ Chp1 的目标是基于裸机的、能运行的内核代码，同时介绍了程序运行环境等的一些理论原理。本文分两个部分，一是移除 std 编写运行程序，二是直接基于裸]]></description>
</item><item>
    <title>LevelDB学习——1、SkipList</title>
    <link>http://example.org/posts/skiplist/</link>
    <pubDate>Mon, 07 Mar 2022 21:08:18 &#43;0800</pubDate><author>
                    <name>方里明</name><uri>https://limingfang.github.io</uri><email>limingfang97@outlook.com</email></author><guid>http://example.org/posts/skiplist/</guid>
    <description><![CDATA[引言​ SkipList 是 Memtable 的核心存储数据结构，其负责对用户的 record 进行有序存储。SkipList 见到的只是字节流，然后利用给定的 Comparator 进行排序存储。 ​ SkipList 保证查询和]]></description>
</item><item>
    <title>LevelDB学习——1、Arena</title>
    <link>http://example.org/posts/arena/</link>
    <pubDate>Sat, 05 Mar 2022 12:08:18 &#43;0800</pubDate><author>
                    <name>方里明</name><uri>https://limingfang.github.io</uri><email>limingfang97@outlook.com</email></author><guid>http://example.org/posts/arena/</guid>
    <description><![CDATA[Arena​ Arena 在 Leveldb 中负责对 Memtable 内存管理，加快了 Memtable 使用堆内存时的效率。相关文件是 util/arena.h,util/arena.cc。 ​ Arena 管理堆]]></description>
</item></channel>
</rss>
